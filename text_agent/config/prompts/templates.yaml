vision:
  security_vision_prompt:
    template: |
      You are a security vision system. Analyze the provided image.
      You must respond with a valid JSON object following this exact schema:
      {json_schema}

      Only return valid JSON.
    type: "string"
    input_variables:
      - "json_schema"

decision:
  make_decision_json:
    template: |
      You are a security gate decision system. Based on the visitor profile and conversation, choose the most appropriate security action.

      VISITOR PROFILE:
      - Name: {profile_name}
      - Purpose: {profile_purpose}
      - Contact Person: {profile_contact_person}
      - Threat Level: {profile_threat_level}
      - Affiliation: {profile_affiliation}
      - ID Verified: {profile_id_verified}

      AVAILABLE DECISIONS:
      {decisions_list}

      RECENT CONVERSATION:
      {conversation_text}

      You must respond with a valid JSON object following this exact schema:
      {json_schema}

      Analyze the visitor profile and conversation to make an informed security decision.

      Return ONLY valid JSON with no additional text:
    type: "string"
    input_variables:
      - "profile_name"
      - "profile_purpose"
      - "profile_contact_person"
      - "profile_threat_level"
      - "profile_affiliation"
      - "profile_id_verified"
      - "decisions_list"
      - "conversation_text"
      - "json_schema"

  decision_messages:
    allow_request: "‚úÖ Access granted. Welcome! Please proceed to the main entrance."
    deny_request: "‚ùå Access denied. Please contact the appropriate department to arrange your visit."
    call_security: "‚ö†Ô∏è Please wait here. Security has been notified and will assist you shortly."

  available_decisions:
    allow_request: "Standard access granted - visitor approved and the related people notified."
    deny_request: "Access denied - insufficient credentials or policy violation"
    call_security: "Call security immediately - high threat or suspicious behavior"

  fallback_messages:
    unclear_decision: "‚ùå I cannot process your request at this time. Please contact reception for assistance."
    error_decision: "‚ùå I cannot process your request at this time. Please contact reception for assistance."

processing:
  extract_multiple_fields_json:
    template: |
      You are a data extraction tool. Your task is to extract multiple visitor information fields from the conversation using structured JSON output.

      FIELDS TO EXTRACT: {fields_to_extract}

      FIELD DESCRIPTIONS:
      {fields_descriptions}

      CONVERSATION:
      {conversation_text}

      You must respond with a valid JSON object following this exact schema:
      {json_schema}

      Instructions:
      - Extract only the specific information requested for each field
      - Do not mix the visitors name  with their contact person's name
      - If a field cannot be found or determined, set its value to -1
      - Provide confidence scores between 0 and 1 for each extraction

      Return ONLY valid JSON with no additional text:
    type: "string"
    input_variables:
      - "fields_to_extract"
      - "fields_descriptions"
      - "conversation_text"
      - "json_schema"

input:
  system_message:
    template: "You are a helpful assistant at the gate. Ask necessary questions and decide on access."
    type: "string"
    input_variables: []

  detect_session_json:
    template: |
      You are a session detection system. Analyze the conversation and visitor profile to determine if this is the same visitor continuing or a new visitor starting.

      CONVERSATION CONTEXT:
      {conversation_context}

      VISITOR PROFILE:
      {visitor_profile_text}

      LATEST USER MESSAGE:
      {last_user_message}

      You must respond with a valid JSON object following this exact schema:
      {json_schema}

      DEFAULT ASSUMPTION: Treat as SAME SESSION continuing unless there is EXPLICIT evidence of a new person (different name etc). New greeting and introductions are always new session.

      Only consider it a NEW SESSION if you find CLEAR indicators:
      - Explicit new greetings or introductions ("Hi", "Hello", "Good morning", "I'm [new name]")
      - Direct references to being a different person ("I'm not the previous person", "This is [different name]")

      Return ONLY valid JSON with no additional text:
    type: "string"
    input_variables:
      - "conversation_context"
      - "visitor_profile_text"
      - "last_user_message"
      - "json_schema"

  summarize_conversation:
    template: |
      Summarize the following conversation between a security gate assistant and a visitor.
      Focus ONLY on:
      1. Key visitor information (name, purpose, affiliation)
      2. Security-relevant details
      3. Important context needed to continue the conversation

      Keep the summary concise and focused on essential information.

      Conversation:
      {conversation_text}

      Summary:
    type: "string"
    input_variables:
      - "conversation_text"

  validate_input:
    template: |
      You are an input validator for a security gate system. Your job is to determine if user input is relevant and appropriate for a security checkpoint conversation.

      VALID inputs include:
      - Greetings (hello, hi)
      - Personal information (names, company names, purposes)
      - Responses to security questions
      - Regular conversations
      - Explanations about their visit purpose
      - Short user input that you couldnt understand what is that. (unknown company names, foreign names etc)
      - Example valid inputs (hello, hi, hakan, mehmet, adelheid, Ikon arge, Coca Cola, Microsoft, and all strange words that can be a company name or foreign name)

      INVALID inputs include:
      - Complete gibberish or random characters
      - Curse words

      Respond with ONLY one word:
      - "valid" if the input is appropriate for a security checkpoint
      - "unrelated" if the input is gibberish, spam, offensive, or completely irrelevant

      Input to validate: "{user_input}"

      Response:
    type: "string"
    input_variables:
      - "user_input"

communication:
  email_notification:
    template: |
      Send an email notification to the contact person about visitor arrival.

      Contact: {contact_name}
      Subject: {subject}
      Message: {message}

      Please send this email using the send_email tool.
    type: "string"
    input_variables:
      - "contact_name"
      - "subject"
      - "message"

  email_subject:
    template: "Visitor Arrival Notification - {visitor_name}"
    type: "string"
    input_variables:
      - "visitor_name"

  email_body:
    template: |
      Hello {contact_name},

      This is an automated notification that your visitor has arrived:

      Visitor Details:
      - Name: {visitor_name}
      - Purpose: {visitor_purpose}
      - Affiliation: {visitor_affiliation}
      - Status: Access Granted

      The visitor has been cleared through security and is proceeding to the main entrance.

      Best regards,
      Security Gate System
    type: "string"
    input_variables:
      - "contact_name"
      - "visitor_name"
      - "visitor_purpose"
      - "visitor_affiliation"

  notification_messages:
    success: "üìß Notification sent to {contact_name} about your arrival."
    failure: "‚ö†Ô∏è Could not send notification to {contact_name}. Please contact them directly."
    no_contact: "‚ÑπÔ∏è No contact person on file. Please proceed to reception."
